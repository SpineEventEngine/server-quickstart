/*
 * Copyright 2018, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This file describes the project dependencies.
 * 
 * The required dependencies are already added to the expected places.
 * All the other described dependencies are optional.
 * 
 * Modify this file to add/change/remove dependencies of the project.
 * 
 * Caution: the versions of the dependencies in this file conform the versions of the respective 
 * Spine dependencies. Beware of runtime conflicts when changing them.
 *
 * Inspired by dependency management of the Uber's NullAway project:
 *  https://github.com/uber/NullAway/blob/master/gradle/dependencies.gradle
 */

// Repositories to which we may publish. Normally, only one repository will be used.
// See `publish.gradle` for details of the publishing process.

// Specific repositories.
ext.repos = [
        // Old Archiva Repositories
        oldSpine          : "http://maven.teamdev.com/repository/spine",
        oldSpineSnapshots : "http://maven.teamdev.com/repository/spine-snapshots",

        // New CloudRepo Repositories
        spine             : "https://spine.mycloudrepo.io/public/repositories/releases",
        spineSnapshots    : "https://spine.mycloudrepo.io/public/repositories/snapshots",

        gradlePlugins     : "https://plugins.gradle.org/m2/"
]

//noinspection GroovyAssignabilityCheck
final def versions = [
        slf4j            : "1.7.25",
        checkerFramework : "2.5.2",
        errorProne       : "2.3.1",
        errorProneJavac  : "9+181-r4173-1", // taken from here: https://github.com/tbroyer/gradle-errorprone-plugin/blob/v0.6/build.gradle.kts
        errorPronePlugin : "0.6",
        protobufPlugin   : "0.8.5",
        appenginePlugin  : "1.3.5",
        findBugs         : "3.0.2",
        guava            : "26.0-jre",
        protobuf         : "3.6.1",
        grpc             : "1.15.0",
        junit5           : "5.3.1",
        junitPioneer     : "0.2.0",
        truth            : "0.42",
        spine            : [
                // Versions of Spine modules.
                core: "0.11.8-SNAPSHOT",
                base: "0.11.8-SNAPSHOT",
                time: "0.11.00-SNAPSHOT"
        ]
]

final def spine = [
        // Spine module dependencies.
        // These dependencies are required. 
        client        : "io.spine:spine-client:$versions.spine.core",
        server        : "io.spine:spine-server:$versions.spine.core",
        base          : "io.spine:spine-base:$versions.spine.base",
        time          : "io.spine:spine-time:$versions.spine.time"
]

//noinspection GroovyAssignabilityCheck
final def build = [
        errorProneJavac        : "com.google.errorprone:javac:$versions.errorProneJavac",
        errorProneAnnotations  : "com.google.errorprone:error_prone_annotations:$versions.errorProne",
        errorProneCheckApi     : "com.google.errorprone:error_prone_check_api:$versions.errorProne",
        errorProneCore         : "com.google.errorprone:error_prone_core:$versions.errorProne",
        errorProneTestHelpers  : "com.google.errorprone:error_prone_test_helpers:$versions.errorProne",

        checkerAnnotations     : "org.checkerframework:checker-qual:$versions.checkerFramework",
        checkerDataflow        : ["org.checkerframework:dataflow:$versions.checkerFramework",
                                  "org.checkerframework:javacutil:$versions.checkerFramework"],

        jsr305Annotations      : "com.google.code.findbugs:jsr305:$versions.findBugs",

        guava                  : "com.google.guava:guava:$versions.guava",
        slf4j                  : "org.slf4j:slf4j-api:$versions.slf4j",
        protobuf               : ["com.google.protobuf:protobuf-java:$versions.protobuf",
                                  "com.google.protobuf:protobuf-java-util:$versions.protobuf"],
        protoc                 : "com.google.protobuf:protoc:$versions.protobuf",

        ci: "true" == System.getenv("CI"),

        gradlePlugins: [
                errorProne    : "net.ltgt.gradle:gradle-errorprone-plugin:$versions.errorPronePlugin",
                protobuf      : "com.google.protobuf:protobuf-gradle-plugin:$versions.protobufPlugin",
                appengine     : "com.google.cloud.tools:appengine-gradle-plugin:$versions.appenginePlugin",
                modelCompiler : "io.spine.tools:spine-model-compiler:$versions.spine.base"
        ]
]

//noinspection GroovyAssignabilityCheck
final def grpc = [
        grpcStub     : "io.grpc:grpc-stub:$versions.grpc",
        grpcOkHttp   : "io.grpc:grpc-okhttp:$versions.grpc",
        grpcProtobuf : "io.grpc:grpc-protobuf:$versions.grpc",
        grpcNetty    : "io.grpc:grpc-netty:$versions.grpc",
]

//noinspection GroovyAssignabilityCheck
final def test = [
        junit4       : "junit:junit:4.12",
        junit5Api    : ["org.junit.jupiter:junit-jupiter-api:$versions.junit5",
                        "org.junit.jupiter:junit-jupiter-params:$versions.junit5",
                        "org.apiguardian:apiguardian-api:1.0.0"],
        junit5Runner : ["org.junit.jupiter:junit-jupiter-engine:$versions.junit5",
                        "org.junit.vintage:junit-vintage-engine:$versions.junit5"],
        junitPioneer : "org.junit-pioneer:junit-pioneer:$versions.junitPioneer",
        slf4j        : "org.slf4j:slf4j-jdk14:$versions.slf4j",
        guavaTestlib : "com.google.guava:guava-testlib:$versions.guava",
        mockito      : "org.mockito:mockito-core:2.12.0",
        hamcrest     : "org.hamcrest:hamcrest-all:1.3",
        truth        : ["com.google.truth:truth:$versions.truth",
                        "com.google.truth.extensions:truth-java8-extension:$versions.truth",
                        "com.google.truth.extensions:truth-proto-extension:$versions.truth"]
]

ext.deps = [
        "build"    : build,
        "spine"    : spine,
        "grpc"     : grpc,
        "test"     : test,
        "versions" : versions
]
